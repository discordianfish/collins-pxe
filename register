#!/bin/sh

RETRYN=20

call() {
  status=
  data_message=

  TMP=`mktemp`
  if ! curl -s -o "$TMP" --basic -u "$collins_user:$collins_password" -H \
    'Accept: text/x-shellscript' "$@"
  then
    echo "FATAL ERROR: Couldn't connect to collins"
    exit 1
  fi
  . "$TMP"
  rm "$TMP"
}

log() {
  message=$1
  severity=$2
  echo "$severity: $message"
  call -X PUT -d "message=$message" -d type="$severity" \
      "$asset_url/log"
}

collins() {
  reason=shift
  call $@
  if [ "$status" == "error" ]
  then
    log "$reason: $data_message" "CRITICAL"

    return 1
  fi
}

for f in `cat /proc/cmdline | tr ' ' '\n' | grep ^collins_`
do
    export $f
done

if [ -z "$collins_url" -o \
		 -z "$collins_user" -o \
		 -z "$collins_password" -o \
		 -z "$collins_serial" ]
then
  echo "collins parameters not found in /proc/cmdline:"
	cat /proc/cmdline
	exit 1
fi

asset_url="$collins_url/asset/$collins_serial"

call $asset_url
if [ -n "$ASSET_STATUS" ]
then
  if [ "$ASSET_STATUS" == "Allocated" ]
  then
      log "Asset already allocated" "CRITICAL" 
      exit 1
	fi
  log "Asset already registered" "WARNING"
fi

echo "Registering $collins_serial:"
echo -n " - Waiting for lldp"
while [ -z "`lldpctl -f keyvalue`" ]
do
	i=$((i+1))
  echo -n '.'
  sleep 1
	if [ "$i" -gt "$RETRYN" ]
	then
		echo "[ERR]"
		log "lldpctl failed" "CRITICAL"
		exit 1
	fi
done
echo "[OK]"

LLDP_TMP=`mktemp`
LSHW_TMP=`mktemp`
lldpctl -f xml > "$LLD_TMP"
collins --data-urlencode "lldp@$LLDP_TMP" \
        --data-urlencode "lshw@$LLDP_TMP" \
        --data-urlencode "CHASSIS_TAG=$RACK" \
        $asset_url

rm "$LLD_TMP" "$LSHW_TMP"
